<?php namespace {{NAMESPACE}}\Http\Controllers;

use {{NAMESPACE}}\Contracts\Blueprints\{{NAME}} as Blueprint;
use Illuminate\Foundation\Application;
use Purposemedia\Authentication\Http\Controllers\DashboardController;
use {{NAMESPACE}}\Http\Requests\{{EDIT_REQUEST}};
use {{NAMESPACE}}\Http\Requests\{{CREATE_REQUEST}};

class {{NAME}}Controller extends DashboardController
{

	/**
	 * [$contract description]
	 * @var [type]
	 */
	protected $contract;

    /**
     * [__construct description]
     * @param Blueprint $contract [description]
     */
	public function __construct( Blueprint $contract, Application $app )
	{
		$this->middleware( 'auth' );
		$this->middleware( 'permission' );
		$this->repo = $contract;
		$this->container = $app['ensphere.container'];
        $this->render();
	}

	/**
	 * [index description]
	 * @return [type] [description]
	 */
	public function index()
	{
		if( ! is_null( $return = $this->repo->index( $this ) ) ) return $return;
	}

	/**
	 * [{{SHOW_EDIT_METHOD}} description]
	 * @param  [type] $pageID [description]
	 * @return [type]         [description]
	 */
	public function {{SHOW_EDIT_METHOD}}( ${{IDNAME}} )
	{
		if( ! is_null( $return = $this->repo->{{SHOW_EDIT_METHOD}}( $this, ${{IDNAME}} ) ) ) return $return;
	}

	/**
	 * [{{EDIT_METHOD}} description]
	 * @param  EditPageRequest $request [description]
	 * @param  [type]          $pageID  [description]
	 * @return [type]                   [description]
	 */
	public function {{EDIT_METHOD}}( {{EDIT_REQUEST}} $request, ${{IDNAME}} )
	{
		if( ! is_null( $return = $this->repo->{{EDIT_METHOD}}( $this, $request, ${{IDNAME}} ) ) ) return $return;
	}

	/**
	 * [{{SHOW_CREATE_METHOD}} description]
	 * @return [type] [description]
	 */
	public function {{SHOW_CREATE_METHOD}}()
	{
		if( ! is_null( $return = $this->repo->{{SHOW_CREATE_METHOD}}( $this ) ) ) return $return;
	}

	/**
	 * [{{CREATE_METHOD}} description]
	 * @param  {{CREATE_REQUEST}} $request [description]
	 * @return [type]                     [description]
	 */
	public function {{CREATE_METHOD}}( {{CREATE_REQUEST}} $request )
	{
		if( ! is_null( $return = $this->repo->{{CREATE_METHOD}}( $this, $request ) ) ) return $return;
	}

	/**
	 * [{{DELETE_METHOD}} description]
	 * @param  [type] $pageID [description]
	 * @return [type]         [description]
	 */
	public function {{DELETE_METHOD}}( ${{IDNAME}} )
	{
		if( ! is_null( $return = $this->repo->{{DELETE_METHOD}}( $this, ${{IDNAME}} ) ) ) return $return;
	}


}
